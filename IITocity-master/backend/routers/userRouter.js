import express from "express";
import expressAsyncHandler from "express-async-handler";
import User from "../models/userModel.js";
import bcrypt from 'bcryptjs';
import mytemplate from "../mytemplate.js";
import { generateToken, isAuth } from "../utils.js";

const userRouter = express.Router();

userRouter.get(
  "/seed",
  expressAsyncHandler(async (req, res) => {
    await User.remove({}); // pehle sare user ko delete kr do fir uske bad add kro nhi to agar hm apna page refresh krenge to sare users dobara se insert ho jayenge lekin hmne email vgera main unique true lagya huya hain jiske karan error aa jayega
    const createdUsers = await User.insertMany(mytemplate.users);
    res.send({ createdUsers });
  })
);


userRouter.post(
  '/signin',
  expressAsyncHandler(async (req, res) => {
    const user = await User.findOne({ email: req.body.email });
    if (user) {
      if (bcrypt.compareSync(req.body.password, user.password)) {
        res.send({
          _id: user._id,
          name: user.name,
          email: user.email,
          isAdmin: user.isAdmin,
          token: generateToken(user),
          // this token is generated by JSON web token
          // JSON web token generates a hash string that is used for your next request to authenticate
          // this is the way of authenticating and authorizing user
        });
        return;
      }
    }
    res.status(401).send({ message: 'Invalid email or password' });
  })
);

userRouter.post(
  '/register',
  expressAsyncHandler(async (req, res) => {
    const user = new User({
      name: req.body.name,
      email: req.body.email,
      password: bcrypt.hashSync(req.body.password, 8),
    });
    const createdUser = await user.save();
    res.send({
      _id: createdUser._id,
      name: createdUser.name,
      email: createdUser.email,
      isAdmin: createdUser.isAdmin,
      token: generateToken(createdUser),
    });
  })
);

userRouter.get('/:id', expressAsyncHandler(async(req, res) =>{
  const user = await User.findById(req.params.id);
  if(user){
    res.send(user);
  } else {
    res.status(404).send({ message: 'User Not Found' });
  }
}))

export default userRouter;

userRouter.put('/profile', isAuth, expressAsyncHandler(async(req, res) =>{
  const user = await User.findById(req.user._id);
  if(user){
    user.name = req.body.name || user.name;
    user.email = req.body.email || user.email;
    if(req.body.password){
      user.password = bcrypt.hashSync(req.body.password, 8)
    }
    const updatedUser = await user.save();
    res.send({
      _id: updatedUser._id,
      name: updatedUser.name,
      email: updatedUser.email,
      isAdmin: updatedUser.isAdmin,
      token : generateToken(updatedUser),
    })
  }
}))
